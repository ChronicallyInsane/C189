Index: Module7/test_collections/test_sort_and_search_array.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Module7/test_collections/test_sort_and_search_array.py	(date 1593027006376)
+++ Module7/test_collections/test_sort_and_search_array.py	(date 1593027006376)
@@ -0,0 +1,22 @@
+"""
+Author: Evan
+Date: 6/22
+Purpose: Testing Arrays
+"""
+
+
+import unittest as ut
+from Module7.fun_with_collections import sort_and_search_array
+from unittest.mock import patch
+
+
+class Testsort(ut.TestCase):
+    @patch('Module7.fun_with_collections.sort_and_search_list.sort_list', '[5, 4, 3]')
+    def test_sort(self):
+        self.assertEqual(sort_and_search_array.sort_list(), "Array('I', [3, 4, 5])")
+
+    def test_search_found(self):
+        self.assertEqual(sort_and_search_array.search_list([3, 9, 7], 7), 2)
+
+    def test_search_not_found(self):
+        self.assertEqual(sort_and_search_array.search_list([3, 9, 7], 10) - 1)
Index: .idea/inspectionProfiles/profiles_settings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/inspectionProfiles/profiles_settings.xml	(date 1592831792048)
+++ .idea/inspectionProfiles/profiles_settings.xml	(date 1592831792048)
@@ -0,0 +1,6 @@
+<component name="InspectionProjectProfileManager">
+  <settings>
+    <option name="USE_PROJECT_PROFILE" value="false" />
+    <version value="1.0" />
+  </settings>
+</component>
\ No newline at end of file
Index: Module7/fun_with_collections/sort_and_search_array.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Module7/fun_with_collections/sort_and_search_array.py	(date 1593026766061)
+++ Module7/fun_with_collections/sort_and_search_array.py	(date 1593026766061)
@@ -0,0 +1,47 @@
+"""
+Author: Evan
+Date: 6/22
+Purpose: to implement arrays
+"""
+
+import array as array
+from Module7.fun_with_collections import basic_list
+
+
+def main():
+    list1 = []
+    list1 = basic_list.make_list()
+    arr = array.array("I")
+    for i in range(0, len(list1)):
+        j = list1[i]
+        j = int(j)
+        arr.append(j)
+    print(arr)
+    search_list(arr, 7)
+    sort_list(arr)
+    print(arr)
+
+
+def search_list(arr, val):
+    try:
+        return arr.index(val)
+    except ValueError:
+        return -1
+
+
+def sort_list(arr):  # no return statement included because lst is updated via the function, returning isn't necessary
+
+    buffer = 0
+    min = 0
+    for i in range(0, len(arr)):  # basic sort implementation
+        min = i
+        for j in range(i + 1, len(arr)):
+            if arr[min] > arr[j]:
+                min = j
+        buffer = arr[i]
+        arr[i] = arr[min]
+        arr[min] = buffer
+
+
+if __name__ == '__main__':
+    main()
Index: Module7/fun_with_collections/student_info.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Module7/fun_with_collections/student_info.txt	(date 1593025119438)
+++ Module7/fun_with_collections/student_info.txt	(date 1593025119438)
@@ -0,0 +1,1 @@
+['name = Wololo', '3', '75', '35', 'n']	
\ No newline at end of file
Index: Module7/fun_with_collections/iodemonstration.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Module7/fun_with_collections/iodemonstration.py	(date 1593025180278)
+++ Module7/fun_with_collections/iodemonstration.py	(date 1593025180278)
@@ -0,0 +1,61 @@
+"""
+Author : Evan
+Date: 6/22
+Purpose: fileio
+
+"""
+import os as os
+
+
+def main():
+    get_student_info(name="Johnathan", course="memes")
+    get_student_info(name="Tricia")
+    get_student_info(name="Wololo")
+    get_student_info(name="Stallman")
+    for i in range(0, 5):
+        get_student_info(name=input("enter name"))
+        if input("Press Enter to continue else press 'n' to stop") == 'n':
+            exit(0)
+    read_from_file()
+
+
+def write_to_file(*args, **kwargs):
+    f = open('student_info.txt', 'w')
+    for i in range(0, len(args)):
+        f.write(str(args[i]))
+        f.write("\t")
+    for key, value in kwargs.items():
+        f.write("{0} = {1}".format(key, value))
+        f.write("\n")
+
+    f.close()
+
+
+def get_student_info(**kwargs):
+    print("Enter scores as required, n to stop")
+    scores =[]
+    joined = []
+    token='y'
+    while token != 'n':
+        token = input("Score?")
+        scores.append(token)
+    for key, value in kwargs.items():
+        joined.append(("{0} = {1}".format(key, value)))
+    for i in range(0, len(scores)):
+        joined.append(scores[i])
+    if input("Write to file? y/n") == 'y':
+        write_to_file(joined)
+    return joined
+
+
+def read_from_file():
+    file_name = "student_info.txt"
+    file_name = input("file name?")
+    file_dir = os.path.dirname(__file__)
+    with open(os.path.join(file_dir, file_name), "r") as f:
+        line = f.readlines()
+        print(line)
+
+
+if __name__ == '__main__':
+    main()
Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/.gitignore	(date 1592831794118)
+++ .idea/.gitignore	(date 1592831794118)
@@ -0,0 +1,3 @@
+# Default ignored files
+/shelf/
+/workspace.xml
Index: Module7/fun_with_collections/keyword.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Module7/fun_with_collections/keyword.py	(date 1593021992879)
+++ Module7/fun_with_collections/keyword.py	(date 1593021992879)
@@ -0,0 +1,26 @@
+"""
+Author: Evan
+Date/ 6/21
+Purpose: To demonstrate abstract, user defined constructs for input
+"""
+
+
+def main():
+    average_scores(1, 2, 3, 4, 5, proclivity="annoyance", profession='abstract waste of time')
+
+
+def average_scores(*args, **kwargs):
+    total = 0
+    for i in range(0, len(args)):
+        total += args[i]
+    for key, value in kwargs.items():
+        print("{0} = {1}".format(key, value), end=' ')
+    total = total / len(args)
+    print("with current average: ", total)
+
+
+# 'Result: name = M gpa = 3.2 course = Python with current average 30.0
+
+if __name__ == '__main__':
+    print(average_scores(4, 3, 2, 4, name='Robert', GPA='4.0', course='Python'))
+    print(average_scores(50, 45, 60, 25, name='Jones', GPA='1.0', course='Not Python'))
Index: .idea/C189.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/C189.iml	(date 1592831792024)
+++ .idea/C189.iml	(date 1592831792024)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="PYTHON_MODULE" version="4">
+  <component name="NewModuleRootManager">
+    <content url="file://$MODULE_DIR$" />
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/vcs.xml	(date 1592831792028)
+++ .idea/vcs.xml	(date 1592831792028)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(date 1592831792034)
+++ .idea/misc.xml	(date 1592831792034)
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.8" project-jdk-type="Python SDK" />
+</project>
\ No newline at end of file
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/modules.xml	(date 1592831792041)
+++ .idea/modules.xml	(date 1592831792041)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/C189.iml" filepath="$PROJECT_DIR$/.idea/C189.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
diff --git Module7/fun_with_collections/testscores.txt Module7/fun_with_collections/testscores.txt
new file mode 100644
diff --git Module8/__init__.py Module8/__init__.py
new file mode 100644
